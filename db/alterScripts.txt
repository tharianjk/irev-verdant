-- 25-08-2017


drop procedure  if exists spPolarMultiple;
-- call spPolarMultiple('1000.0,2000','0.0001,0.0001',8,'admin','F')
-- --------------------------------------------------------------------------------
-- Routine DDL
-- Note: comments before and after the routine body will not be stored by the server
-- --------------------------------------------------------------------------------
DELIMITER $$

CREATE DEFINER=`root`@`localhost` PROCEDURE `spPolarMultiple`(strfreq varchar(100),strlg varchar(100),testid int,usr Varchar(20),typ varchar(2))
BEGIN 
declare cnt int; 
declare rint int; 

declare strmaxvalue varchar(50);
declare strminvalue varchar(50);
declare prec int ;
set cnt=0; 
delete from temppolar where user=usr; 
create table if not exists t1 (id integer ,freq decimal(20,10),lg decimal (20,10)); 

truncate table t1; 
select frequnit into @unt from testdata where test_id=testid;
       
SET @String = strfreq; 
SET @Occurrences = LENGTH(@String) - LENGTH(REPLACE(@String, ',', '')); 

        myloop: WHILE (@Occurrences > 0)        
 DO              SET @myValue = SUBSTRING_INDEX(@String, ',', 1); 
            IF (@myValue != '') THEN  
           insert into t1(id,freq) values(cnt,case @unt when 'GHz' then convert(@myValue,decimal)*1000 else convert(@myValue,decimal) end );   
          set cnt=cnt+1;        
     ELSE              
   LEAVE myloop;      
        END IF;    
         SET @Occurrences = LENGTH(@String) - LENGTH(REPLACE(@String, ',', '')); 

       IF (@occurrences = 0) THEN      
            LEAVE myloop;           
   END IF;            
 SET @String = SUBSTRING(@String,LENGTH(SUBSTRING_INDEX(@String, ',', 1))+2);      
   END WHILE;  



 set cnt=0; 
SET @String      = strlg;   
      SET @Occurrences = LENGTH(@String) - LENGTH(REPLACE(@String, ',', ''));   
      myloop: WHILE (@Occurrences > 0)     
    DO        
      SET @myValue = SUBSTRING_INDEX(@String, ',', 1);        
     IF (@myValue != '') THEN       
      update  t1 set lg=convert(@myValue,decimal) where id=cnt ;        
     set cnt=cnt+1;          
   ELSE              
   LEAVE myloop;     
         END IF;     
        SET @Occurrences = LENGTH(@String) - LENGTH(REPLACE(@String, ',', ''));       
      IF (@occurrences = 0) THEN             
     LEAVE myloop;       
       END IF;           
  SET @String = SUBSTRING(@String,LENGTH(SUBSTRING_INDEX(@String, ',', 1))+2);   
      END WHILE; 
 select count(*) into @cnt from t1; 

if @cnt=0 then
insert into t1(id,freq,lg) values(1,case @unt when 'GHz' then convert(strfreq,decimal)*1000 else convert(strfreq,decimal) end,convert(strlg,decimal));
set @cnt=1;
 end if;
set rint=0; 
set @acnt=0;

select count(*) into @acnt from scaling s inner join product_serial ps on s.product_id=ps.product_id inner join testdata t on ps.prodserial_id=t.prodserial_id
where t.test_id=testid and s.frequency in (select  freq from t1);
if @acnt > 0 then
select distinct convert(floor(max(maxscale)),char(30)) ,convert(round(min(minscale),0),char(30))  into strmaxvalue,strminvalue from scaling s inner join product_serial ps on s.product_id=ps.product_id inner join testdata t on ps.prodserial_id=t.prodserial_id
where t.test_id=testid and s.frequency in (select  freq from t1);
end if;

if typ='H' then 
set @tab= 'hdata';
if @acnt = 0 then
       select convert(floor(max(Amplitude))+1,char(30)) into strmaxvalue FROM hdata HD 
		where HD.Frequency in (select  freq from t1) and HD.Test_id=testid;
		select convert(round(min(Amplitude),0),char(30)) into strminvalue FROM hdata HD 
		where HD.Frequency in (select  freq from t1) and HD.Test_id=testid;
end if;

end if;
  if typ='V' then 
set @tab= 'vdata';
if @acnt = 0 then
       select convert(floor(max(Amplitude))+1,char(30)) into strmaxvalue FROM vdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
		select convert(round(min(Amplitude),0),char(30)) into strminvalue FROM vdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
end if;
end if;
  if typ='C' then 
set @tab= 'cpdata';
if @acnt = 0 then
       select convert(floor(max(Amplitude))+1,char(30)) into strmaxvalue FROM cpdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
		select convert(round(min(Amplitude),0),char(30)) into strminvalue FROM cpdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
end if;
end if;
  if typ='P' then 
set @tab= 'pitchdata';
if @acnt = 0 then
       select convert(floor(max(Amplitude))+1,char(30)) into strmaxvalue FROM pitchdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
		select convert(round(min(Amplitude),0),char(30)) into strminvalue FROM pitchdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
end if;
end if; 
 if typ='R' then 
set @tab= 'rolldata'; 
if @acnt = 0 then
       select convert(floor(max(distinct Amplitude))+1,char(30)) into strmaxvalue FROM rolldata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
		select convert(round(min(distinct Amplitude),0),char(30)) into strminvalue FROM rolldata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
end if;
end if;
 if typ='Y' then 
set @tab= 'yawdata'; 
if @acnt = 0 then
       select convert(floor(max(Amplitude))+1,char(30)) into strmaxvalue FROM yawdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
		select convert(round(min(Amplitude),0),char(30)) into strminvalue FROM yawdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
end if;
end if;
if typ='F' then 
set @tab= 'fdata'; 
if @acnt = 0 then
       select convert(floor(max(Amplitude))+1,char(30)) into strmaxvalue FROM fdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
		select convert(round(min(Amplitude),0),char(30)) into strminvalue FROM fdata HD 
		where HD.Frequency in (select distinct freq from t1) and HD.Test_id=testid;
end if;
end if;

myloop: WHILE (rint<@cnt)      
   DO  

select freq into @freq from t1 where id=rint; 
 
SET @sql1 = CONCAT('insert into temppolar(user,test_id,angle,amp',rint+1,',frequency)'); 
set @sql2= CONCAT('SELECT ''',usr,''', HD.Test_id,HD.Angle,HD.Amplitude,HD.Frequency FROM ',@tab,' HD where HD.Frequency=',@freq,' and HD.Test_id=',testid);  
set @s=CONCAT(@sql1,@sql2);  
        
PREPARE stmt1 FROM @s;  
EXECUTE stmt1;  
DEALLOCATE PREPARE stmt1;  
  set rint=rint+1;    
END WHILE;        
    drop table t1; 
 
 

  select test_id TestId,Angle,sum(amp1) Amplitude1, frequency,sum(amp2) Amplitude2,
sum(amp3) Amplitude3,sum(amp4) Amplitude4,sum(amp5) Amplitude5 ,sum(amp6) Amplitude6,sum(amp7) Amplitude7,
sum(amp8) Amplitude8,sum(amp9) Amplitude9,sum(amp10) Amplitude10 ,sum(amp11) Amplitude11,sum(amp12) Amplitude12,
sum(amp13) Amplitude13,sum(amp14) Amplitude14,sum(amp15) Amplitude15, sum(amp16) Amplitude16,sum(amp17) Amplitude17,
sum(amp18) Amplitude18,sum(amp19) Amplitude19,sum(amp20) Amplitude20,strmaxvalue,strminvalue,@unt frequnit
 from temppolar where user=usr group by test_id,angle,frequency  ,strmaxvalue,strminvalue, frequnit
order by test_id,frequency,angle;  
END

-- 10-08-2017
drop view if exists phasedifference_view;

CREATE    
VIEW phasedifference_view AS
    SELECT 
        h.Test_id AS test_id,
        h.Frequency AS Frequency,
        h.Angle AS angle,
        ABS((v.phaseval - h.phaseval)) AS phasedifference
    FROM
        (hdata_phase h
        JOIN vdata_phase v ON (((h.Test_id = v.Test_id)
            AND (h.Frequency = v.Frequency)
            AND (h.Angle = v.Angle))))

-- 08-08-2017
drop table IF EXISTS hdata_phase;
CREATE TABLE IF NOT EXISTS hdata_phase (
  hData_id_p INT AUTO_INCREMENT NOT NULL,
  Test_id INT NULL,
   Frequency decimal(40,20),
  Angle DECIMAL(12,2) NULL,
  Phaseval DECIMAL(12,8) NULL,  
  PRIMARY KEY (hData_id_p))
ENGINE = InnoDB;
alter table hdata_phase add constraint FK_hdata_phase_test foreign key (Test_id) references testdata(Test_id);
create index testid_freq_angle_php on hdata_phase(Test_id, Frequency, angle,Phaseval);

drop table IF EXISTS vdata_phase;
CREATE TABLE IF NOT EXISTS vdata_phase (
  vData_id_p INT AUTO_INCREMENT NOT NULL,
  Test_id INT NULL,
   Frequency decimal(40,20),
  Angle DECIMAL(12,2) NULL,
  Phaseval DECIMAL(12,8) NULL,  
  PRIMARY KEY (vData_id_p))
ENGINE = InnoDB;
alter table vdata_phase add constraint FK_vdata_phase_test foreign key (Test_id) references testdata(Test_id);
create index testid_freq_angle_pvp on vdata_phase(Test_id, Frequency, angle,Phaseval);

drop table IF EXISTS phasecalculated;
CREATE TABLE phasecalculated (
  phCalculated_Id INT AUTO_INCREMENT NOT NULL,
  Test_id INT NULL,
  Frequency decimal(40,20),
  TestDate datetime DEFAULT NULL,
  PD_0 decimal(40,20) DEFAULT NULL,
  PD_P60 decimal(40,20) DEFAULT NULL,
  PD_M60 decimal(40,20) DEFAULT NULL,
  MaxPD_P60_Ratio decimal(40,20) DEFAULT NULL,
  MaxPD_P60_Angle decimal(40,20) DEFAULT NULL,
  MaxPD_M60_Ratio decimal(40,20) DEFAULT NULL,
  MaxPD_M60_Angle decimal(40,20) DEFAULT NULL,
   PRIMARY KEY (phCalculated_Id),
  KEY FK_phCalculated_prd (Test_id),
  CONSTRAINT FK_phCalculated_prd FOREIGN KEY (Test_id) REFERENCES testdata (Test_id)
) ENGINE=InnoDB;

-- 03-08-2017
drop table IF EXISTS fdata;
drop table IF EXISTS fcalculated;

CREATE TABLE IF NOT EXISTS fData (
  FData_id INT AUTO_INCREMENT NOT NULL,
  Test_id INT NULL,
   Frequency decimal(40,20),
  Angle DECIMAL(12,2) NULL,
  Amplitude DECIMAL(12,8) NULL,  
  PRIMARY KEY (FData_id));

 
alter table fdata add constraint FK_fdata_test foreign key (Test_id) references testdata(Test_id);
create index testid_freq_angle_fp on fData(Test_id, Frequency, angle,Amplitude);

CREATE TABLE fcalculated (
  FCalculated_Id int(11) NOT NULL AUTO_INCREMENT,
  Test_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  TestDate datetime DEFAULT NULL,
  OmniDeviation decimal(40,20) DEFAULT NULL,
  3Db_BW_BMax decimal(40,20) DEFAULT NULL,
  3Db_BW_0 decimal(40,20) DEFAULT NULL,
  3Db_BW_90 decimal(40,20) DEFAULT NULL,
  3Db_BS_BMax decimal(40,20) DEFAULT NULL,
  3Db_BS_0 decimal(40,20) DEFAULT NULL,
  3Db_BS_90 decimal(40,20) DEFAULT NULL,
  10Db_BW_BMax decimal(40,20) DEFAULT NULL,
  10Db_BW_0 decimal(40,20) DEFAULT NULL,
  10Db_BW_90 decimal(40,20) DEFAULT NULL,
  10Db_BS_BMax decimal(40,20) DEFAULT NULL,
  10Db_BS_0 decimal(40,20) DEFAULT NULL,
  10Db_BS_90 decimal(40,20) DEFAULT NULL,
  BackLobe decimal(40,20) DEFAULT NULL,
  3Db_BW_270 decimal(40,20) DEFAULT NULL,
  3Db_BS_270 decimal(40,20) DEFAULT NULL,
  10Db_BW_270 decimal(40,20) DEFAULT NULL,
  10Db_BS_270 decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (FCalculated_Id),
  KEY FK_fcalculated_prd (Test_id),
  CONSTRAINT FK_fcalculated_prd FOREIGN KEY (Test_id) REFERENCES testdata (Test_id)
) ENGINE=InnoDB;



-- 24-07-2017
ALTER TABLE arcalculated 
ADD COLUMN AR_P30 DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN AR_M30 DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN AR_P60 DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN AR_M60 DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_P30_Ratio DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_P30_Angle DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_M30_Ratio DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_M30_Angle DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_P60_Ratio DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_P60_Angle DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_M60_Ratio DECIMAL(40,20) NULL DEFAULT NULL,
ADD COLUMN MaxAR_M60_Angle DECIMAL(40,20) NULL DEFAULT NULL;


-- 06-07-2016
alter table pv_testdata add OType varchar(10) default 'B';
ALTER TABLE pv_arcalculated
ADD COLUMN VP_BM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN HP_BM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN AR_BM DECIMAL(40,20) NULL DEFAULT NULL ;


CREATE TABLE pv_cpdata_gm (
  CPData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(40,20) DEFAULT NULL,
  Amplitude decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (CPData_id),
  KEY Prodserialid_freq_angle_amp_cp_a (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvcpdata_testg FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;


ALTER TABLE pv_gmcalculated
ADD COLUMN gm_XBM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN gm_YBM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN gm_GFBM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN gm_CPGAINBM DECIMAL(40,20) NULL DEFAULT NULL;

ALTER TABLE pv_cpcalculated 
ADD COLUMN X1BM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN Y1BM DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN BacklobeBM DECIMAL(40,20) NULL DEFAULT NULL;


-- 09-06-2016
drop view if exists axialratio_view;

     
CREATE 
VIEW axialratio_view AS
    SELECT 
        h.Test_id AS test_id,
        h.Frequency AS Frequency,
        h.Angle AS angle,
       ABS((h.Amplitude - v.Amplitude)) AS axialRatio
    FROM
        (hdata h
        JOIN vdata v ON (((h.Test_id = v.Test_id)
            AND (h.Frequency = v.Frequency)
            AND (h.Angle = v.Angle))));

-- 18-03-2016

drop table if exists temp_GTHead;

create table temp_GTHead (testid integer ,
VCOLHEAD1 Varchar(10),
VCOLHEAD2 Varchar(10),
VCOLHEAD3 Varchar(10),
VCOLHEAD4 Varchar(10),
VCOLHEAD5 Varchar(10),
VCOLHEAD6 Varchar(10),
VCOLHEAD7 Varchar(10),
VCOLHEAD8 Varchar(10),
VCOLHEAD9 Varchar(10),
VCOLHEAD10 Varchar(10),
VCOLHEAD11 Varchar(10),
VCOLHEAD12 Varchar(10),
VCOLHEAD13 Varchar(10),
VCOLHEAD14 Varchar(10),
VCOLHEAD15 Varchar(10),
VCOLHEAD16 Varchar(10),
VCOLHEAD17 Varchar(10),
VCOLHEAD18 Varchar(10),
VCOLHEAD19 Varchar(10),
VCOLHEAD20 Varchar(10),
VCOLHEAD21 Varchar(10),
VCOLHEAD22 Varchar(10),
VCOLHEAD23 Varchar(10),
VCOLHEAD24 Varchar(10),
VCOLHEAD25 Varchar(10),
VCOLHEAD26 Varchar(10),
VCOLHEAD27 Varchar(10),
VCOLHEAD28 Varchar(10),
VCOLHEAD29 Varchar(10),
VCOLHEAD30 Varchar(10),
VCOLHEAD31 Varchar(10),
VCOLHEAD32 Varchar(10),
VCOLHEAD33 Varchar(10),
VCOLHEAD34 Varchar(10),
VCOLHEAD35 Varchar(10),
VCOLHEAD36 Varchar(10),
VCOLHEAD37 Varchar(10),
VCOLHEAD38 Varchar(10),
VCOLHEAD39 Varchar(10),
VCOLHEAD40 Varchar(10),
VCOLHEAD41 Varchar(10),
VCOLHEAD42 Varchar(10),
VCOLHEAD43 Varchar(10),
VCOLHEAD44 Varchar(10),
VCOLHEAD45 Varchar(10),
VCOLHEAD46 Varchar(10),
VCOLHEAD47 Varchar(10),
VCOLHEAD48 Varchar(10),
VCOLHEAD49 Varchar(10),
VCOLHEAD50 Varchar(10)
);





-- alter table pv_testdata add AntennaUsed varchar(200) 
-- alter table product add prodmodel varchar(100);

-- uncommment below two alter tables for slant-elevation 270 degree change
-- ALTER TABLE hcalculated
-- ADD COLUMN 3Db_BW_270 DECIMAL(40,20) NULL DEFAULT NULL,
-- ADD COLUMN 3Db_BS_270 DECIMAL(40,20) NULL DEFAULT NULL,
-- ADD COLUMN 10Db_BW_270 DECIMAL(40,20) NULL DEFAULT NULL,
-- ADD COLUMN 10Db_BS_270 DECIMAL(40,20) NULL DEFAULT NULL;

-- ALTER TABLE vcalculated
-- ADD COLUMN 3Db_BW_270 DECIMAL(40,20) NULL DEFAULT NULL,
-- ADD COLUMN 3Db_BS_270 DECIMAL(40,20) NULL DEFAULT NULL,
-- ADD COLUMN 10Db_BW_270 DECIMAL(40,20) NULL DEFAULT NULL,
-- ADD COLUMN 10Db_BS_270 DECIMAL(40,20) NULL DEFAULT NULL;

-- 18-02-2016
drop table if exists temp_GT ; 

create table temp_GT (id integer auto_increment primary key,
frequency decimal(40,20),
V1 decimal(40,20),H1 decimal(40,20),C1 decimal(40,20),
V2 decimal(40,20),H2 decimal(40,20),C2 decimal(40,20),
V3 decimal(40,20),H3 decimal(40,20),C3 decimal(40,20),
V4 decimal(40,20),H4 decimal(40,20),C4 decimal(40,20),
V5 decimal(40,20),H5 decimal(40,20),C5 decimal(40,20),
V6 decimal(40,20),H6 decimal(40,20),C6 decimal(40,20),
V7 decimal(40,20),H7 decimal(40,20),C7 decimal(40,20),
V8 decimal(40,20),H8 decimal(40,20),C8 decimal(40,20),
V9 decimal(40,20),H9 decimal(40,20),C9 decimal(40,20),
V10 decimal(40,20),H10 decimal(40,20),C10 decimal(40,20),
V11 decimal(40,20),H11 decimal(40,20),C11 decimal(40,20),
V12 decimal(40,20),H12 decimal(40,20),C12 decimal(40,20),
V13 decimal(40,20),H13 decimal(40,20),C13 decimal(40,20),
V14 decimal(40,20),H14 decimal(40,20),C14 decimal(40,20),
V15 decimal(40,20),H15 decimal(40,20),C15 decimal(40,20),
V16 decimal(40,20),H16 decimal(40,20),C16 decimal(40,20),
V17 decimal(40,20),H17 decimal(40,20),C17 decimal(40,20),
V18 decimal(40,20),H18 decimal(40,20),C18 decimal(40,20),
V19 decimal(40,20),H19 decimal(40,20),C19 decimal(40,20),
V20 decimal(40,20),H20 decimal(40,20),C20 decimal(40,20),
V21 decimal(40,20),H21 decimal(40,20),C21 decimal(40,20),
V22 decimal(40,20),H22 decimal(40,20),C22 decimal(40,20),
V23 decimal(40,20),H23 decimal(40,20),C23 decimal(40,20),
V24 decimal(40,20),H24 decimal(40,20),C24 decimal(40,20),
V25 decimal(40,20),H25 decimal(40,20),C25 decimal(40,20),
V26 decimal(40,20),H26 decimal(40,20),C26 decimal(40,20),
V27 decimal(40,20),H27 decimal(40,20),C27 decimal(40,20),
V28 decimal(40,20),H28 decimal(40,20),C28 decimal(40,20),
V29 decimal(40,20),H29 decimal(40,20),C29 decimal(40,20),
V30 decimal(40,20),H30 decimal(40,20),C30 decimal(40,20),
V31 decimal(40,20),H31 decimal(40,20),C31 decimal(40,20),
V32 decimal(40,20),H32 decimal(40,20),C32 decimal(40,20),
V33 decimal(40,20),H33 decimal(40,20),C33 decimal(40,20),
V34 decimal(40,20),H34 decimal(40,20),C34 decimal(40,20),
V35 decimal(40,20),H35 decimal(40,20),C35 decimal(40,20),
V36 decimal(40,20),H36 decimal(40,20),C36 decimal(40,20),
V37 decimal(40,20),H37 decimal(40,20),C37 decimal(40,20),
V38 decimal(40,20),H38 decimal(40,20),C38 decimal(40,20),
V39 decimal(40,20),H39 decimal(40,20),C39 decimal(40,20),
V40 decimal(40,20),H40 decimal(40,20),C40 decimal(40,20),
V41 decimal(40,20),H41 decimal(40,20),C41 decimal(40,20),
V42 decimal(40,20),H42 decimal(40,20),C42 decimal(40,20),
V43 decimal(40,20),H43 decimal(40,20),C43 decimal(40,20),
V44 decimal(40,20),H44 decimal(40,20),C44 decimal(40,20),
V45 decimal(40,20),H45 decimal(40,20),C45 decimal(40,20),
V46 decimal(40,20),H46 decimal(40,20),C46 decimal(40,20),
V47 decimal(40,20),H47 decimal(40,20),C47 decimal(40,20),
V48 decimal(40,20),H48 decimal(40,20),C48 decimal(40,20),
V49 decimal(40,20),H49 decimal(40,20),C49 decimal(40,20),
V50 decimal(40,20),H50 decimal(40,20),C50 decimal(40,20));





drop procedure if exists spPVPolarPlot;
drop procedure if exists spPVPolarSummary;

drop table if exists pv_GainSTDHorn;
drop table if exists pv_testfreq;
drop table if exists pv_vdata;
drop table if exists pv_hdata;
drop table if exists pv_cpdata;
drop table if exists pv_vdata_azimuth;
drop table if exists pv_hdata_azimuth;
drop table if exists pv_cpdata_azimuth;
drop table if exists pv_vdata_elevation;
drop table if exists pv_hdata_elevation;
drop table if exists pv_cpdata_elevation;
drop table if exists pv_vdata_gt;
drop table if exists pv_hdata_gt;
drop table if exists pv_cpdata_gt;
drop table if exists pv_vdata_gm;
drop table if exists pv_hdata_gm;

drop table if exists pv_vcalculated;
drop table if exists pv_hcalculated;
drop table if exists pv_cpcalculated;
drop table if exists pv_arcalculated;
drop table if exists pv_gt_intermediate;
drop table if exists pv_gt_calculated;
drop table if exists pv_radata;
drop table if exists pv_gmcalculated;

drop table if exists pv_speccalculated;
drop table if exists pv_prodserial;
drop table if exists pv_testdata;

CREATE TABLE pv_testdata (
  Test_id int(11) NOT NULL AUTO_INCREMENT,
  TestName varchar(50) DEFAULT NULL,
  TestDesc varchar(100) DEFAULT NULL,
  Product_id int(11) ,
  TestDate datetime DEFAULT NULL,
  frequnit varchar(5) DEFAULT 'MHz',
  testcenter varchar(100) DEFAULT NULL,
  instruments varchar(100) DEFAULT NULL,
  Calibration varchar(100) DEFAULT NULL,
  testproc varchar(100) DEFAULT NULL,
  testtype varchar(10) DEFAULT NULL,
  rptheader varchar(200) DEFAULT NULL,
  rptfooter varchar(200) DEFAULT NULL,
  inst_slno varchar(100),
  AntennaUsed varchar(200) ,
  PRIMARY KEY (Test_id)
) ;



alter table pv_testdata add  foreign key (Product_id) references product(Product_id);


CREATE TABLE pv_prodserial (
  Prodserial_id int(11) NOT NULL AUTO_INCREMENT,
  test_id int(11) DEFAULT NULL,
  SerialNo varchar(45) DEFAULT NULL, 
  PRIMARY KEY (Prodserial_id),
  KEY test_id_idx (test_id),
  CONSTRAINT test_id FOREIGN KEY (test_id) REFERENCES pv_testdata (test_id) 
) ;


CREATE TABLE pv_testfreq (
  freq_id int(11) NOT NULL AUTO_INCREMENT,
  test_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (freq_id),
 KEY test_id_pvidx (test_id),
  CONSTRAINT Prodserial_id FOREIGN KEY (test_id) REFERENCES pv_testdata(test_id) 
);

CREATE TABLE pv_vdata_azimuth (
  VData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (VData_id),
  KEY Prodserialid_freq_angle_vp_a (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvvdata_test FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;
CREATE TABLE pv_vdata_elevation (
  VData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (VData_id),
  KEY Prodserialid_freq_angle_vp_e (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvvdata_test1 FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;
CREATE TABLE pv_vdata_gt (
  VData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (VData_id),
  KEY Prodserialid_freq_angle_vp_gt (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvvdata_test2 FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_vdata_gm (
  VData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (VData_id),
  KEY Prodserialid_freq_angle_vp_gm (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvvdata_testgm FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_hdata_azimuth (
  HData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (HData_id),
  KEY Prodserialid_freq_angle_hp_a (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvhdata_test FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_hdata_elevation (
  HData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (HData_id),
  KEY Prodserialid_freq_angle_hp_e (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvhdata_test1 FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_hdata_gt (
  HData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (HData_id),
  KEY Prodserialid_freq_angle_hp_gt (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvhdata_test_g FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;


CREATE TABLE pv_hdata_gm (
  HData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(12,2) DEFAULT NULL,
  Amplitude decimal(12,8) DEFAULT NULL,
  PRIMARY KEY (HData_id),
  KEY Prodserialid_freq_angle_hp_gm (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvhdata_test_gm FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_cpcalculated (
  CPCalculated_Id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Test_id INT(11) NULL ,
  datatype varchar(2) not null ,
  Frequency decimal(40,20) DEFAULT NULL,
  TestDate datetime DEFAULT NULL,
  3Db_BW_BMax_left decimal(40,20) DEFAULT NULL,
  3Db_BW_BMax_right decimal(40,20) DEFAULT NULL,
  3Db_BW_BMax decimal(40,20) DEFAULT NULL,
  3Db_BS_BMax decimal(40,20) DEFAULT NULL,
  3Db_BW_0_left decimal(40,20) DEFAULT NULL,
  3Db_BW_0_right decimal(40,20) DEFAULT NULL,
  3Db_BW_0 decimal(40,20) DEFAULT NULL,
  3Db_BS_0 decimal(40,20) DEFAULT NULL,
  10Db_BW_BMax_left decimal(40,20) DEFAULT NULL,
  10Db_BW_BMax_right decimal(40,20) DEFAULT NULL,
  10Db_BW_BMax decimal(40,20) DEFAULT NULL,
  10Db_BW_0_left decimal(40,20) DEFAULT NULL,
  10Db_BW_0_right decimal(40,20) DEFAULT NULL,
  10Db_BW_0 decimal(40,20) DEFAULT NULL,
  X1 decimal(40,20) DEFAULT NULL,
  Y1 decimal(40,20) DEFAULT NULL,
  Backlobe decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (CPCalculated_Id),
  KEY FK_cpcalculated_pv (Prodserial_id),
  KEY FK_cpcalculated_pv1 (Test_id),
  CONSTRAINT FK_cpcalculated_pv FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id),
  CONSTRAINT FK_cpcalculated_pv1 FOREIGN KEY (Test_id) REFERENCES pv_testdata (Test_id)
) ;
CREATE TABLE pv_arcalculated (
  ARCalculated_Id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Test_id INT(11) NULL ,
  datatype varchar(2) not null ,
  Frequency decimal(40,20) DEFAULT NULL,
  TestDate datetime DEFAULT NULL,
  VP_0 decimal(40,20) DEFAULT NULL,
  HP_0 decimal(40,20) DEFAULT NULL,
  AR_0 decimal(40,20) DEFAULT NULL,
  VP_P45 decimal(40,20) DEFAULT NULL,
  HP_P45 decimal(40,20) DEFAULT NULL,
  AR_P45 decimal(40,20) DEFAULT NULL,
  VP_M45 decimal(40,20) DEFAULT NULL,
  HP_M45 decimal(40,20) DEFAULT NULL,
  AR_M45 decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (ARCalculated_Id),
  KEY FK_arcalculated_pv (Prodserial_id),
  KEY FK_arcalculated_pv1 (Test_id),
  CONSTRAINT FK_arcalculated_pv FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id),
  CONSTRAINT FK_arcalculated_pv1 FOREIGN KEY (Test_id) REFERENCES pv_testdata (Test_id)
) ;
create table pv_GainSTDHorn(
gsh_id int(11) NOT NULL AUTO_INCREMENT,
test_id int(11) not null,
Frequency decimal(40,20) not null,
stdhorn decimal(40,20) not null default 0,
PRIMARY KEY (gsh_id),
  KEY FK_GSH_test_id_pv (test_id),
  CONSTRAINT FK_GSH_test_id_pv FOREIGN KEY (test_id) REFERENCES pv_testdata (test_id)
);




CREATE TABLE pv_gt_intermediate (
  GTIntermediate_Id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Test_id INT(11) NULL ,
  Frequency decimal(40,20) DEFAULT NULL,
  TestDate datetime DEFAULT NULL,
  HP_0 decimal(40,20) DEFAULT NULL,
  VP_0 decimal(40,20) DEFAULT NULL,
  CP_0 decimal(40,20) DEFAULT NULL,
  HP_P45 decimal(40,20) DEFAULT NULL,
  VP_P45 decimal(40,20) DEFAULT NULL,
  CP_P45 decimal(40,20) DEFAULT NULL,
  HP_M45 decimal(40,20) DEFAULT NULL,
  VP_M45 decimal(40,20) DEFAULT NULL,
  CP_M45 decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (GTIntermediate_Id),
  KEY FK_GTIntermediate_pv (Prodserial_id),
  CONSTRAINT FK_GTIntermediate_pv FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;


ALTER TABLE pv_gt_intermediate 
ADD CONSTRAINT FK_GTIntermediate_pv1 FOREIGN KEY (Test_id) REFERENCES pv_testdata (Test_id);

CREATE TABLE pv_gt_calculated(
  GTcalculated_Id int(11) NOT NULL AUTO_INCREMENT,
  Test_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  TestDate datetime DEFAULT NULL,
  MAX_CP decimal(40,20) DEFAULT NULL,
  MIN_CP decimal(40,20) DEFAULT NULL,
  Window decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (GTcalculated_Id),
  KEY FK_GTCalculated_pv (Test_id),
  CONSTRAINT FK_GTCalculated_pv FOREIGN KEY (Test_id) REFERENCES pv_testdata (Test_id)
) ;
  
ALTER TABLE pv_gt_calculated 
CHANGE COLUMN MAX_CP MAX_CP_0 DECIMAL(40,20) NULL DEFAULT NULL ,
CHANGE COLUMN MIN_CP MIN_CP_0 DECIMAL(40,20) NULL DEFAULT NULL ,
CHANGE COLUMN Window Window_0 DECIMAL(40,20) NULL DEFAULT NULL ,
ADD COLUMN MAX_CP_P45 DECIMAL(40,20) NULL,
ADD COLUMN MIN_CP_P45 DECIMAL(40,20) NULL,
ADD COLUMN Window_P45 DECIMAL(40,20) NULL,
ADD COLUMN MAX_CP_M45 DECIMAL(40,20) NULL,
ADD COLUMN MIN_CP_M45 DECIMAL(40,20) NULL,
ADD COLUMN Window_M45 DECIMAL(40,20) NULL;

CREATE TABLE pv_radata (
  raData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  RecvdAmp decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (raData_id),
  KEY Prodserialid_freq_ra (Prodserial_id,Frequency),
  CONSTRAINT FK_pvradata FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_gmcalculated (
  GMCalculated_Id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Test_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  TestDate datetime DEFAULT NULL,
  gm_A decimal(40,20) DEFAULT NULL,
  gm_B decimal(40,20) DEFAULT NULL,
  gm_C decimal(40,20) DEFAULT NULL,
  gm_D decimal(40,20) DEFAULT NULL,
  gm_Gv decimal(40,20) DEFAULT NULL,
  gm_X decimal(40,20) DEFAULT NULL,
  gm_Y decimal(40,20) DEFAULT NULL,
  gm_GF decimal(40,20) DEFAULT NULL,
  gm_CPGAIN decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (GMCalculated_Id),
  KEY FK_gmcalculated_pv (Prodserial_id),
  KEY FK_gmCalculated_pv1 (Test_id),
  CONSTRAINT FK_gmcalculated_pv FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id),
  CONSTRAINT FK_gmCalculated_pv1 FOREIGN KEY (Test_id) REFERENCES pv_testdata (Test_id)
) ;
CREATE TABLE pv_cpdata_azimuth (
  CPData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(40,20) DEFAULT NULL,
  Amplitude decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (CPData_id),
  KEY Prodserialid_freq_angle_amp_cp_a (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvcpdata_testa FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_cpdata_elevation (
  CPData_id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Frequency decimal(40,20) DEFAULT NULL,
  Angle decimal(40,20) DEFAULT NULL,
  Amplitude decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (CPData_id),
  KEY Prodserialid_freq_angle_amp_cp_e (Prodserial_id,Frequency,Angle,Amplitude),
  CONSTRAINT FK_pvcpdata_teste FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id)
) ;

CREATE TABLE pv_speccalculated (
  SpecCalculated_Id int(11) NOT NULL AUTO_INCREMENT,
  Prodserial_id int(11) DEFAULT NULL,
  Test_id INT(11) NULL ,
  datatype varchar(2) not null ,
  TestDate datetime DEFAULT NULL,
  3dbBW_BM_spec decimal(40,20) DEFAULT NULL,
  3dbBW_0_spec decimal(40,20) DEFAULT NULL,
  10dbBW_BM_majorspec decimal(40,20) DEFAULT NULL,
  10dbBW_BM_minorspec decimal(40,20) DEFAULT NULL,
  10dbBW_0_majorspec decimal(40,20) DEFAULT NULL,
  10dbBW_0_minorspec decimal(40,20) DEFAULT NULL,
  3dbBS_BM_majorspec decimal(40,20) DEFAULT NULL,
  3dbBS_BM_minorspec decimal(40,20) DEFAULT NULL,
  3dbBS_0_majorspec decimal(40,20) DEFAULT NULL,
  3dbBS_0_minorspec decimal(40,20) DEFAULT NULL,
  PRIMARY KEY (SpecCalculated_Id),
  KEY FK_SpecCalculated_pv (Prodserial_id),
  KEY FK_SpecCalculated_pv1 (Test_id),
  CONSTRAINT FK_SpecCalculated_pv FOREIGN KEY (Prodserial_id) REFERENCES pv_prodserial (Prodserial_id),
  CONSTRAINT FK_SpecCalculated_pv1 FOREIGN KEY (Test_id) REFERENCES pv_testdata (Test_id)
) ;

ALTER TABLE pv_radata 
DROP INDEX Prodserialid_freq_ra ,
ADD INDEX Prodserialid_freq_ra (Prodserial_id ASC, Frequency ASC, RecvdAmp ASC);






